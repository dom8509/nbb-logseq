{:paths ["script"]
 :deps
 {nbb.build/nbb.build
  {:git/url "https://github.com/logseq/nbb"
   :git/sha "63d8f2defad1a4ea880c892670be078ea68b3ba2"
   :deps/root "build"}
  #_{:local/root "../nbb/build"}
  nbb/nbb
  {:git/url "https://github.com/logseq/nbb"
   :git/sha "63d8f2defad1a4ea880c892670be078ea68b3ba2"}
  #_{:local/root "../nbb"}
  datascript/deps
  {:git/url "https://github.com/babashka/nbb-features"
   :git/sha "7af8569a7f932af2cde5f8677133915540ab0c49"
   :deps/root "features/datascript"}
  datascript-transit/deps
  {:git/url "https://github.com/babashka/nbb-features"
   :git/sha "7af8569a7f932af2cde5f8677133915540ab0c49"
   :deps/root "features/datascript-transit"}
  linked/deps
  {:git/url "https://github.com/babashka/nbb-features"
   :git/sha "7af8569a7f932af2cde5f8677133915540ab0c49"
   :deps/root "features/linked"}
  cljs-time/deps {:local/root "features/cljs-time"}}

 :tasks
 {:requires ([babashka.fs :as fs]
             [nbb.build :as build]
             [clojure.string :as str])

  clean (fs/delete-tree "lib")

  release {:depends [clean]
           :doc "Compiles release build."
           :task (build/release *command-line-args*)}

  test nbb-feature-tests/main

  ;; Publish tasks copied from nbb
  current-tag (->> (shell {:out :string} "git describe")
                   :out
                   str/trim
                   (re-matches (re-pattern "^v\\d+\\.\\d+\\.\\d+\\S*")))

  current-branch (->> (shell {:out :string} "git rev-parse --abbrev-ref HEAD")
                      :out
                      str/trim)

  ci:is-release {:depends [current-tag current-branch]
                 :task (and current-tag (= "main" current-branch))}

  ci:publish {:doc "Publishes release build to npm"
              :depends [ci:is-release]
              :task
              (if ci:is-release
                (do
                  (println "Releasing")
                  (run 'release)
                  (shell "npm publish --access public"))
                (println "Skipping release."))}}}
