{:tasks
 {:requires
  ([babashka.fs :as fs]
   [org.httpkit.client :as http])

  :init
  (do
    (defn query* [host]
      (let [query (or (first *command-line-args*)
                      (throw (ex-info "No query given" {})))
            resp (deref
                  (http/get
                   (format "%s/q" host)
                   {:query-params {:q query}}))]
        (if (= 200 (:status resp))
          (print (:body resp))
          (prn resp))))

    (defn- get-app-name []
      (second (re-find (re-pattern "app = \"([\\S]+)\"")
                       (slurp "fly.toml")))))

  -write-nbb-deps
  {:doc "Write nbb dependencies"
   :task (do
           (shell "bb --config nbb.edn uberjar nbb-deps.jar")
           (fs/create-dirs "nbb_deps")
           (fs/unzip "nbb-deps.jar" "nbb_deps")
           (fs/delete "nbb-deps.jar"))}

  install
  {:doc "Install nbb dependencies"
   :task (do
           (fs/delete-tree "nbb_deps")
           (run '-write-nbb-deps)
           ;; only keep nbb_deps/logseq as the other dirs are not needed
           (fs/move "nbb_deps" "nbb_deps.tmp")
           (fs/create-dirs "nbb_deps")
           (fs/move "nbb_deps.tmp/logseq" "nbb_deps")
           (fs/delete-tree "nbb_deps.tmp"))}

  query
  {:doc "Runs a query against deployed server"
   :task (query* (str "https://" (get-app-name) ".fly.dev"))}

  dev:query
  {:doc "Runs a query against dev server"
   :task (query* "http://localhost:8092")}

  print-query
  {:doc "Prints url for query against deployed server"
   :task
   (let [url (format "%s/q"
                     (str "https://" (get-app-name) ".fly.dev"))]
     (print (str url "?q=" (java.net.URLEncoder/encode (first *command-line-args*)))))}

  dev:print-query
  {:doc "Prints url for query against dev server"
   :task
   (let [url "http://localhost:8092/q"]
     (print (str url "?q=" (java.net.URLEncoder/encode (first *command-line-args*)))))}}}
